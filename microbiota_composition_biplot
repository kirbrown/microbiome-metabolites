# load packages
library(viridis)
library(reshape2)
library(tidyverse)
library(janitor)
library(pheatmap)
library(patchwork)

# read data file
data_meta <- read.csv("brown_peak_table.csv")[,-1]

# filter adult colonized
data <- data_meta %>% filter(!grepl(c("xs"), sample))

# adjust sample names for plotting
data$sample <- str_replace_all(data$sample, "_3_", "_03_")
data$sample <- str_replace_all(data$sample, "_8_", "_08_")
data$sample <- str_replace_all(data$sample, "jej", "ajej")
data$sample <- str_replace_all(data$sample, "ile", "bile")
data$sample <- str_replace_all(data$sample, "pef", "dpef")
data$sample <- str_replace_all(data$sample, "ser", "eser")

# log2 transform data
data <- data %>% column_to_rownames(var="sample")
data[data==0] <- NA
data <- log(data, 2)

# generate site variable
data <- data %>% rownames_to_column(var="site")

# make long
data_l <- melt(data, id.vars = c("site")) 

# generate metadata
data <- separate(data_l, site, into=c("site", "hyg", "age", "sex", "rep"), sep="_", remove=F)

# generate factors for stats
test <- data %>% unite(group_var, c("variable", "site"))
test <- test %>% unite(sex_rep, c("hyg", "age", "sex", "rep"), remove=T)

# generate wide data for stats
plot <- test %>% spread(sex_rep, value) 

# remove metabolites not present in 30% of samples
plot <- plot[!rowSums(is.na(plot)) > ncol(plot)*.3,]

# calculate means / group
gf <- apply(plot2[,grep("gf", colnames(plot2))], 1, mean, na.rm=T)
spf <- apply(plot2[,grep("spf", colnames(plot2))], 1, mean, na.rm=T)

# calculate fold change
fold_change <- spf-gf
fold_change <- as.data.frame(fold_change)
group_var <- plot2$group_var

# bind fold changes with group variables
fold_change <- as.data.frame(cbind(group_var,fold_change))

# t test function
ttest <- function(df, grp1, grp2) {
  x = df[grp1]
  y = df[grp2]
  x = as.numeric(x)
  y = as.numeric(y)  
  results = t.test(x, y, na.rm=T, var.equal=F)
  results$p.value
}

# perform t-tests on each test factor
rawpvalue <- apply(plot2, 1, ttest, grep("gf", colnames(plot2)), grep("spf", colnames(plot2)))
group_var <- plot2$group_var

#bing p values with group variables
rawpvalue <- as.data.frame(cbind(group_var, rawpvalue))

# bind p-values with Log2FC
results <- full_join(fold_change, rawpvalue, by=c("group_var"), keep=T)
# make numeric
results <- transform(results, pvals = as.numeric(rawpvalue))

# wrangle data for plotting
volcano2 = results %>%
  separate(group_var.x, into=c("variable", "site"), sep="_") %>%
  #unite(plot_var, c("age", "hyg"), remove=F ) %>%
  mutate(plot_fc = ifelse(fold_change < -5, -5, fold_change)) %>%
  mutate(plot_fc2 = ifelse(plot_fc > 5, 5, plot_fc)) %>%
  mutate(neg_log10_pval = -1*log10(pvals)) %>%
  mutate(neg_log10_pval_plot = ifelse(neg_log10_pval > 4, 4, neg_log10_pval))

# define outliers for plotting (Adjusted p-value <- 0.05 or absolute Log2FC > 2.5
outliers2 <- volcano2 %>% filter(neg_log10_pval > -log(0.05/length(unique(data$variable)),10) | abs(plot_fc) > 2.5)

# generate volcano plot
plot <- volcano2 %>%
  ggplot(aes(x=plot_fc2, y=neg_log10_pval)) +
  geom_point() +
  geom_text_repel(data=outliers2, aes(label=variable), size=2, colour="red", max.overlaps=Inf) +
  geom_vline(xintercept = c(-2.5, 2.5), col="blue", linetype="dashed") +
  geom_hline(yintercept=2.67, col="blue", linetype="dashed")+
  facet_grid(~site) +
  xlab("Log2FC (SPF vs GF") +
  ylab("-log10 P Value") + 
  ggtitle("Differential Metabolite Abundance in SPF vs. GF mice. Labels: -log10(Adj pVal > 0.3 | abs(fc) > 2.5") +
  theme_bw()

spf_vol <- plot

# generate means for OMM12 and GF
gf <- apply(plot2[,grep("gf", colnames(plot2))], 1, mean, na.rm=T)
sdm <- apply(plot2[,grep("sdm", colnames(plot2))], 1, mean, na.rm=T)
fold_change <- sdm-gf
fold_change <- as.data.frame(fold_change)
group_var <- plot2$group_var

fold_change <- as.data.frame(cbind(group_var,fold_change))
# run t-test
rawpvalue <- apply(plot2, 1, ttest, grep("gf", colnames(plot2)), grep("sdm", colnames(plot2)))
group_var <- plot2$group_var

rawpvalue <- as.data.frame(cbind(group_var, rawpvalue))
results <- full_join(fold_change, rawpvalue, by=c("group_var"), keep=T )
results <- transform(results, pvals = as.numeric(rawpvalue))

# wrangle results data for volcano plot
volcano = results %>%
  separate(group_var.x, into=c("variable", "site"), sep="_") %>%
  #unite(plot_var, c("age", "hyg"), remove=F ) %>%
  mutate(plot_fc = ifelse(fold_change < -5, -5, fold_change)) %>%
  mutate(plot_fc2 = ifelse(plot_fc > 5, 5, plot_fc)) %>%
  mutate(neg_log10_pval = -1*log10(pvals)) %>%
  mutate(neg_log10_pval_plot = ifelse(neg_log10_pval > 4, 4, neg_log10_pval))

# calculate outliers based on adjusted P-value < 0.05 or absolut Log2FC > 2.5
outliers2 <- volcano %>% filter(neg_log10_pval > -log(0.05/length(unique(data$variable)),10) | abs(plot_fc) > 2.5)

plot <- volcano %>%
  ggplot(aes(x=plot_fc2, y=neg_log10_pval)) +
  geom_point() +
  geom_text_repel(data=outliers2, aes(label=variable), size=2, colour="red", max.overlaps=Inf) +
  geom_vline(xintercept = c(-2.5, 2.5), col="blue", linetype="dashed") +
  geom_hline(yintercept=2.67, col="blue", linetype="dashed")+
  facet_grid(~site) +
  xlab("Log2FC (SDM vs GF") +
  ylab("-log10 P Value") + 
  ggtitle("Differential Metabolite Abundance in OMM12 vs. GF: labels: -log10(Adj pVal > 0.3 | abs(fc) > 2.5") +
  theme_bw()
  
 sdm_vol <- plot
# Generate Volcano plots
sdm_vol + spf_vol + plot_layout(ncol=1)

# select values for biplots & rename columns
test_sdm <- volcano %>% select(pvals, group_var.y, fold_change)
colnames(test_sdm) <- c("sdm_pval", "group_var", "sdm_fc")
test_spf <- volcano2 %>% select(pvals, group_var.y, fold_change)
colnames(test_spf) <- c("spf_pval", "group_var", "spf_fc")



test <- full_join(test_sdm, test_spf)
test <- test %>% separate(group_var, into = c("metabolite", "site"), sep="_")

test_sdm <- volcano %>% select(pvals, group_var.y, fold_change)
colnames(test_sdm) <- c("sdm_pval", "group_var", "sdm_fc")
test_spf <- volcano2 %>% select(pvals, group_var.y, fold_change)
colnames(test_spf) <- c("spf_pval", "group_var", "spf_fc")

test <- full_join(test_sdm, test_spf)

test2 <- test %>% separate(group_var, into = c("metabolite", "site"), sep="_")

# fitler significant metabolites
spf_sig <- volcano2 %>% filter(pvals < filter(pvals < (0.05/length(unique(volcano2$variable))))
sdm_sig <- vocano %>% filter(pvals < filter(pvals < (0.05/length(unique(volcano2$variable))))

# select top 25 most significant metabolites at each site in SPF vs GF
o_cec_spf <- spf_sig %>% filter(site=="cec") %>% top_n(neg_log10_pval, n=25)
o_col_spf <- spf_sig %>% filter(site=="col") %>%  top_n(neg_log10_pval, n=25)
o_jej_spf <- spf_sig %>% filter(site=="ajej") %>% top_n(neg_log10_pval, n=25)
o_ile_spf <- spf_sig %>% filter(site=="bile") %>% top_n(neg_log10_pval, n=25)
o_pf_spf <- spf_sif %>% filter(site=="dpef")%>% top_n(neg_log10_pval, n=25)
o_ser_spf <- spf_sig %>% filter(site=="eser")%>% top_n(neg_log10_pval, n=25)
o_spl_spf <- spf_sig %>% filter(site=="spl")%>% top_n(neg_log10_pval, n=25)
o_liv_spf <- spf_sig %>% filter(site=="liv") %>% top_n(neg_log10_pval, n=25)
o_uri_spf <- spf_sig %>% filter(site=="uri") %>% top_n(neg_log10_pval, n=25)

# select top 25 most significant metabolites at each site in SDM vs GF
o_cec_sdm <- sdm_sig %>% filter(site=="cec")  %>% top_n(neg_log10_pval, n=25)
o_col_sdm <- sdm_sig %>% filter(site=="col") %>%  top_n(neg_log10_pval, n=25)
o_jej_sdm <- sdm_sig %>% filter(site=="ajej") %>% top_n(neg_log10_pval, n=25)
o_ile_sdm <- sdm_sig %>% filter(site=="bile") %>% top_n(neg_log10_pval, n=25)
o_pf_sdm <- sdm_sig %>% filter(site=="dpef")%>% top_n(neg_log10_pval, n=25)
o_ser_sdm <- sdm_sig %>% filter(site=="eser") %>% top_n(neg_log10_pval, n=25)
o_spl_sdm <- sdm_sig %>% filter(site=="spl")%>% top_n(neg_log10_pval, n=25)
o_liv_sdm <- sdm_sig %>% filter(site=="liv")%>% top_n(neg_log10_pval, n=25)
o_uri_sdm <- sdm_sig %>% filter(site=="uri") %>% top_n(neg_log10_pval, n=25)

# bind outliers into 1 dataframe for Sdm and SPF                                                         
outliers_spf <- rbind(o_jej_spf, o_ile_spf, o_cec_spf, o_col_spf, o_pf_spf, o_ser_spf, o_liv_spf, o_spl_spf, o_uri_spf)
outliers_sdm <- rbind(o_jej_sdm, o_ile_sdm, o_cec_sdm, o_col_sdm, o_pf_sdm, o_ser_sdm, o_liv_sdm, o_spl_sdm, o_uri_sdm)

# select variables of interest and rename columns
spf <- outliers_spf %>% select(group_var.y, pvals, fold_change)
colnames(spf) <- c("group_var", "spf_pval", "spf_fc")
sdm <- outliers_sdm %>% select(group_var.y, pvals, fold_change)
colnames(sdm) <- c("group_var", "sdm_pval", "sdm_fc")

# combined outlier metabolites from SDM and SPF & wrangle
outliers <- full_join(spf, sdm)
outliers_name <- as.data.frame(outliers$group_var); colnames(outliers_name) <- "group_var"
outliers <- left_join(outliers_name, test)
outliers <- outliers %>% separate(group_var, into=c("metabolite", "site"), sep="_")

# add variable to show where metabolites are significant in SPF or SDM vs GF
outliers <- outliers %>% mutate(significant_in = case_when(
  spf_pval < 0.05/length(unique(test2$metabolite)) & sdm_pval > 0.05/length(unique(test2$metabolite)) ~ "spf",
  spf_pval > 0.05/length(unique(test2$metabolite)) & sdm_pval < 0.05/length(unique(test2$metabolite)) ~ "sdm",
  spf_pval < 0.05/length(unique(test2$metabolite)) & sdm_pval < 0.05/length(unique(test2$metabolite)) ~ "spf_sdm"
))

# Generate biplot
bivar <- outliers %>%
  ggplot(mapping = aes(x=sdm_fc, y=spf_fc, label=metabolite, colour=significant_in)) +
  geom_hline(yintercept=0, size=1, colour="grey") +
  geom_vline(xintercept=0, size=1, colour="grey") +
  geom_point() +
  geom_text_repel(aes(label=metabolite), size=2, max.overlaps=Inf, colour="black") +
  facet_wrap(~site, scales="free", ncol=5, drop=F) +
  #scale_x_continuous(trans='log2') +
  #scale_y_continuous(trans='log2') +
  xlab("log2FC (OMM12 vs. GF)") +
  ylab("log2FC (SPF vs. GF)") +
  theme_bw() + 
    geom_abline(intercept=0, slope=1, linetype="dashed")+
  ggtitle("Differential Fold Change in SPF vs GF and OMM12 vs GF")
bivar
